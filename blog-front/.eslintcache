[{"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/index.js":"1","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/App.js":"2","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/footer/index.js":"3","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/header/index.js":"4","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/card/index.js":"5","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/randomtags/index.js":"6","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/hot/index.js":"7","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/about/index.js":"8","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/map/index.js":"9","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blogs/index.js":"10","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/home/index.js":"11","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/notfound/index.js":"12","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/comment/index.js":"13","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/axios.js":"14","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/request.js":"15","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/login/index.js":"16","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blog/index.js":"17","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/postinfo/index.js":"18","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/upload/index.js":"19","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/newblog/index.js":"20","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/timecovert.js":"21","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/commentlist/index.js":"22","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/commentinput/index.js":"23","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/storage.js":"24","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/context/index.js":"25","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/addclick.js":"26"},{"size":240,"mtime":1613693085000,"results":"27","hashOfConfig":"28"},{"size":716,"mtime":1629901921954,"results":"29","hashOfConfig":"28"},{"size":372,"mtime":1613600611019,"results":"30","hashOfConfig":"28"},{"size":1253,"mtime":1629864176672,"results":"31","hashOfConfig":"28"},{"size":4169,"mtime":1629892425444,"results":"32","hashOfConfig":"28"},{"size":1336,"mtime":1629885698279,"results":"33","hashOfConfig":"28"},{"size":468,"mtime":1626838244771,"results":"34","hashOfConfig":"28"},{"size":1056,"mtime":1627745714686,"results":"35","hashOfConfig":"28"},{"size":1303,"mtime":1613709916435,"results":"36","hashOfConfig":"28"},{"size":3958,"mtime":1629883363561,"results":"37","hashOfConfig":"28"},{"size":2059,"mtime":1629902186658,"results":"38","hashOfConfig":"28"},{"size":102,"mtime":1613713948699,"results":"39","hashOfConfig":"28"},{"size":434,"mtime":1627749358287,"results":"40","hashOfConfig":"28"},{"size":556,"mtime":1626060368523,"results":"41","hashOfConfig":"28"},{"size":1455,"mtime":1629892154563,"results":"42","hashOfConfig":"28"},{"size":1958,"mtime":1629863472876,"results":"43","hashOfConfig":"28"},{"size":1632,"mtime":1629901006795,"results":"44","hashOfConfig":"28"},{"size":390,"mtime":1629894317003,"results":"45","hashOfConfig":"28"},{"size":1932,"mtime":1626821564285,"results":"46","hashOfConfig":"28"},{"size":2955,"mtime":1629786250051,"results":"47","hashOfConfig":"28"},{"size":134,"mtime":1626840494926,"results":"48","hashOfConfig":"28"},{"size":1114,"mtime":1627784593469,"results":"49","hashOfConfig":"28"},{"size":2010,"mtime":1627776121291,"results":"50","hashOfConfig":"28"},{"size":263,"mtime":1629873138709,"results":"51","hashOfConfig":"28"},{"size":70,"mtime":1629878968137,"results":"52","hashOfConfig":"28"},{"size":182,"mtime":1629892458092,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"2vs6du",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/index.js",[],["112","113"],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/App.js",["114"],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/footer/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/header/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/card/index.js",["115"],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/randomtags/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/hot/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/about/index.js",["116","117","118"],"import React from \"react\";\nimport \"./index.css\";\nimport { Skeleton, Switch, Card, Avatar } from \"antd\";\nimport {\n  EditOutlined,\n  EllipsisOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { List } from \"antd/lib/form/Form\";\n\nconst { Meta } = Card;\nexport default function About() {\n  const loading = true;\n  return (\n    <div>\n      <div className=\"self-info\">\n        <Card\n          style={{ width: 600, marginTop: 16, borderRadius: \"2rem\" }}\n          actions={[\n            <SettingOutlined key=\"setting\" />,\n            <EditOutlined key=\"edit\" />,\n            <EllipsisOutlined key=\"ellipsis\" />,\n          ]}\n        >\n          <Skeleton avatar paragraph={{ rows: 4 }}>\n            <Meta\n              avatar={\n                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n              }\n              title=\"Card title\"\n              description=\"This is the description\"\n            />\n          </Skeleton>\n        </Card>\n      </div>\n      <div className=\"comments\"></div>\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/map/index.js",["119"],"import React from \"react\";\nimport { List, Typography, Divider, Card } from \"antd\";\nimport \"./index.css\";\n\nconst data = [\n  \"Racing car sprays burning fuel into crowd.\",\n  \"Japanese princess to wed commoner.\",\n  \"Australian walks 100km after outback crash.\",\n  \"Man charged over missing wedding girl.\",\n  \"Los Angeles battles huge wildfires.\",\n];\nconst gridStyle = {\n  width: \"25%\",\n  textAlign: \"center\",\n};\nexport default function SiteMap() {\n  return (\n    <div>\n      <h1 className=\"maptitle\">Liang's Personal Blog SiteMap</h1>\n\n      <div className=\"articlelist\">\n        <Divider orientation=\"left\">New Articles</Divider>\n        <List\n          size=\"large\"\n          dataSource={data}\n          renderItem={(item) => <List.Item>{item}</List.Item>}\n        />\n      </div>\n      <div className=\"articletags\">\n        <Card title=\"Tags\">\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blogs/index.js",["120","121"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Tag, Divider, Spin } from \"antd\";\nimport BlogCard from \"../card\";\nimport \"./index.css\";\nimport {\n  getSentence,\n  getBlogList,\n  getBlogwithTag,\n  getBlogListWithPage,\n  getComments,\n} from \"../../api/request\";\nimport {\n  DownCircleTwoTone,\n  SmileTwoTone,\n  setTwoToneColor,\n} from \"@ant-design/icons\";\n\nsetTwoToneColor(\"#06f\");\n\nexport default function Blogs(props) {\n  const scrollRaf = useRef();\n  //daily content\n  const [dailyContent, setDaliyContent] = useState();\n  const [dailyauthor, setdailyauthor] = useState();\n\n  //bloglist information\n  const [blogList, setblogList] = useState([]);\n\n  //spinning control(daily sentence)\n  const [spin, setspin] = useState(false);\n\n  //spinning control(blog list)\n  const [blogSpin, setblogSpin] = useState(false);\n\n  //page control\n  const [page, setpage] = useState(1);\n\n  //nodata indicator\n  const [noData, setnoData] = useState(false);\n\n  //comments lists\n  const [commentList, setCommentList] = useState([]);\n  //daily update\n  useEffect(() => {\n    async function updateEachHour() {\n      setspin(true);\n      var result = await getSentence();\n\n      var { forward, words_info } = result.data.data.content_list[0];\n      setspin(false);\n      setDaliyContent(forward);\n      setdailyauthor(words_info);\n    }\n    updateEachHour();\n    var timer = setInterval(updateEachHour, 1000 * 6 * 60); //update each hour\n\n    return clearInterval(timer);\n  }, []);\n\n  //get blog list information with page\n  useEffect(() => {\n    (async () => {\n      if (props.tag) {\n        const result = await getBlogwithTag(props.tag);\n        setblogList(result.data.data);\n        return;\n      }\n      setblogSpin(true);\n      var result = await getBlogListWithPage(page);\n      //var result = await getBlogList();\n      if (result.data.status === 1) {\n        //status==1 success\n        var blogs = result.data.data;\n        if (!blogs) {\n          setnoData(true);\n          setblogSpin(false);\n          return;\n        } //reach to the bottom, no more page\n\n        setblogList([...blogList, ...blogs]);\n        setblogSpin(false);\n      }\n    })();\n  }, [page, props.tag]);\n\n  //get blog comments\n  useEffect(() => {\n    (async () => {\n      var result = await getComments();\n      setCommentList(result.data.data);\n    })();\n  }, []);\n\n  const handleAddComment = (value) => {\n    setCommentList([...commentList, value]);\n  };\n\n  return (\n    <div className=\"blog-area\" ref={scrollRaf}>\n      <div className=\"everyday\">\n        <Divider orientation=\"left\">\n          <Tag color=\"#06f\">Daily Sentence:</Tag>\n        </Divider>\n        <Spin spinning={spin} className=\"forSpinning\" />\n        <p>{dailyContent}</p>\n        <div style={{ marginLeft: 30 }}>\n          &nbsp;&nbsp;{dailyauthor ? `-- ${dailyauthor}` : \"\"}\n        </div>\n      </div>\n      <div className=\"card-list\">\n        {blogList.map((blog, index) => {\n          var list =\n            commentList &&\n            commentList.filter((item) => item.article_id === blog.id);\n\n          return (\n            <BlogCard\n              key={index}\n              blog={blog}\n              list={list}\n              handleAddComment={handleAddComment}\n            ></BlogCard>\n          );\n        })}\n\n        <Spin size=\"large\" className=\"loading\" spinning={blogSpin} />\n        {noData ? (\n          <div style={{ textAlign: \"center\" }}>\n            <SmileTwoTone\n              twoToneColor=\"#06f\"\n              style={{ fontSize: \"2.5rem\", margin: \"auto\" }}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      {blogSpin || noData ? (\n        \"\"\n      ) : (\n        <button\n          className=\"nextButton\"\n          onClick={() => {\n            setpage(page + 1);\n          }}\n        >\n          <DownCircleTwoTone\n            twoToneColor=\"#06f\"\n            style={{ fontSize: \"2.5rem\" }}\n          />\n        </button>\n      )}\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/home/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/notfound/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/comment/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/axios.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/request.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/login/index.js",["122","123"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { getUserInfo } from \"../../api/request\";\nimport { setUser } from \"../../utli/storage\";\nconst { Item } = Form;\nfunction Login(props) {\n  const formRef = useRef();\n  const onFinish = async (values) => {\n    const { username, password } = values;\n\n    var result = await getUserInfo(username, password);\n\n    if (result.data.status === 1) {\n      console.log(\"data\", result.data.data);\n      setUser(\"token\", result.data.data);\n      message.success(\"login success\");\n\n      props.history.push(\"/home\");\n    } else {\n      message.warn(\"sorry, you are not verified.Please try again\");\n    }\n  };\n  return (\n    <div className=\"loginForm\">\n      <Form\n        ref={formRef}\n        labelCol={{ span: 6, offset: 1 }}\n        wrapperCol={{ span: 10 }}\n        onFinish={onFinish}\n      >\n        <Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined />}\n            placeholder=\"Username\"\n            autoComplete=\"false\"\n          />\n        </Item>\n        <Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<LockOutlined />}\n            placeholder=\"Password\"\n            autoComplete=\"false\"\n          />\n        </Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"loginButton\">\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n}\nexport default withRouter(Login);\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blog/index.js",["124"],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/postinfo/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/upload/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/newblog/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/timecovert.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/commentlist/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/commentinput/index.js",["125","126","127","128","129","130"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"./index.css\";\nimport moment from \"moment\";\nimport { Comment, Avatar, Form, Button, List, Input, message } from \"antd\";\nimport { addComments } from \"../../api/request\";\n\nconst { TextArea } = Input;\nconst { Item } = Form;\nexport default function InputComment(props) {\n  const [form1] = Form.useForm();\n  const [value, setvalue] = useState(\"\");\n  const { handleAddComment, article_id } = props;\n\n  const handleChange = (e) => {\n    setvalue(e.target.value);\n  };\n  const handleSubmit = async () => {\n    const { name, comment } = form1.getFieldsValue();\n    //insert comment to database\n    var result = await addComments(name, comment, article_id);\n    if (result) {\n      var value = result.data.data;\n      handleAddComment && handleAddComment(value); //update comment in the lists\n      message.success(\"success!\");\n      form1.setFieldsValue({\n        name,\n        comment: \"\",\n      });\n    }\n  };\n  return (\n    <div style={{ marginTop: \"1rem\", marginBottom: \"2rem\" }}>\n      <Form form={form1} layout=\"inline\">\n        <Item\n          name=\"name\"\n          rules={[{ required: true, message: \"cannot be empty\" }]}\n        >\n          <Input\n            autoComplete=\"off\"\n            placeholder=\"name\"\n            style={{ width: \"10rem\", borderRadius: \"1rem\" }}\n          />\n        </Item>\n        <Item\n          name=\"comment\"\n          rules={[{ required: true, message: \"cannot be empty\" }]}\n        >\n          <TextArea\n            rows={1}\n            onChange={handleChange}\n            value={value}\n            placeholder=\"@who:comment\"\n            style={{ width: \"30rem\", borderRadius: \"1rem\" }}\n          />\n        </Item>\n        <Item>\n          <Button\n            htmlType=\"submit\"\n            onClick={handleSubmit}\n            type=\"primary\"\n            size=\"small\"\n            style={{ borderRadius: \"1rem\" }}\n          >\n            Comment\n          </Button>\n        </Item>\n      </Form>\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/storage.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/context/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/addclick.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":14},{"ruleId":"135","severity":1,"message":"139","line":16,"column":20,"nodeType":"137","messageId":"138","endLine":16,"endColumn":25},{"ruleId":"135","severity":1,"message":"140","line":3,"column":20,"nodeType":"137","messageId":"138","endLine":3,"endColumn":26},{"ruleId":"135","severity":1,"message":"141","line":9,"column":10,"nodeType":"137","messageId":"138","endLine":9,"endColumn":14},{"ruleId":"135","severity":1,"message":"142","line":13,"column":9,"nodeType":"137","messageId":"138","endLine":13,"endColumn":16},{"ruleId":"135","severity":1,"message":"143","line":2,"column":16,"nodeType":"137","messageId":"138","endLine":2,"endColumn":26},{"ruleId":"135","severity":1,"message":"144","line":7,"column":3,"nodeType":"137","messageId":"138","endLine":7,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":84,"column":6,"nodeType":"147","endLine":84,"endColumn":23,"suggestions":"148"},{"ruleId":"135","severity":1,"message":"149","line":1,"column":25,"nodeType":"137","messageId":"138","endLine":1,"endColumn":33},{"ruleId":"135","severity":1,"message":"150","line":1,"column":35,"nodeType":"137","messageId":"138","endLine":1,"endColumn":44},{"ruleId":"145","severity":1,"message":"151","line":29,"column":6,"nodeType":"147","endLine":29,"endColumn":8,"suggestions":"152"},{"ruleId":"135","severity":1,"message":"150","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"153","line":1,"column":38,"nodeType":"137","messageId":"138","endLine":1,"endColumn":44},{"ruleId":"135","severity":1,"message":"154","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":14},{"ruleId":"135","severity":1,"message":"155","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":17},{"ruleId":"135","severity":1,"message":"156","line":4,"column":19,"nodeType":"137","messageId":"138","endLine":4,"endColumn":25},{"ruleId":"135","severity":1,"message":"141","line":4,"column":41,"nodeType":"137","messageId":"138","endLine":4,"endColumn":45},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'views' is assigned a value but never used.","'Switch' is defined but never used.","'List' is defined but never used.","'loading' is assigned a value but never used.","'Typography' is defined but never used.","'getBlogList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'blogList'. Either include it or remove the dependency array. You can also do a functional update 'setblogList(b => ...)' if you only need 'blogList' in the 'setblogList' call.","ArrayExpression",["159"],"'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["160"],"'useRef' is defined but never used.","'moment' is defined but never used.","'Comment' is defined but never used.","'Avatar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [blogList, page, props.tag]",{"range":"165","text":"166"},"Update the dependencies array to be: [id]",{"range":"167","text":"168"},[2164,2181],"[blogList, page, props.tag]",[866,868],"[id]"]