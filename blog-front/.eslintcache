[{"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/index.js":"1","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/App.js":"2","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/footer/index.js":"3","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/header/index.js":"4","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/card/index.js":"5","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/randomtags/index.js":"6","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/hot/index.js":"7","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/newcomments/index.js":"8","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/about/index.js":"9","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/message/index.js":"10","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/map/index.js":"11","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blogs/index.js":"12","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/home/index.js":"13","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/notfound/index.js":"14","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/comment/index.js":"15","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/commentbox/index.js":"16","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/inputcomment/index.js":"17","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/axios.js":"18","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/request.js":"19","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/login/index.js":"20","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blog/index.js":"21","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/postinfo/index.js":"22"},{"size":240,"mtime":1613693085000,"results":"23","hashOfConfig":"24"},{"size":623,"mtime":1626490754645,"results":"25","hashOfConfig":"24"},{"size":372,"mtime":1613600611019,"results":"26","hashOfConfig":"24"},{"size":1139,"mtime":1626493318399,"results":"27","hashOfConfig":"24"},{"size":2673,"mtime":1626492297552,"results":"28","hashOfConfig":"24"},{"size":426,"mtime":1613710567418,"results":"29","hashOfConfig":"24"},{"size":316,"mtime":1613593954677,"results":"30","hashOfConfig":"24"},{"size":1829,"mtime":1613710472004,"results":"31","hashOfConfig":"24"},{"size":1151,"mtime":1613768114045,"results":"32","hashOfConfig":"24"},{"size":236,"mtime":1613771122094,"results":"33","hashOfConfig":"24"},{"size":1303,"mtime":1613709916435,"results":"34","hashOfConfig":"24"},{"size":3287,"mtime":1625956044360,"results":"35","hashOfConfig":"24"},{"size":1186,"mtime":1626067232589,"results":"36","hashOfConfig":"24"},{"size":102,"mtime":1613713948699,"results":"37","hashOfConfig":"24"},{"size":328,"mtime":1613770111801,"results":"38","hashOfConfig":"24"},{"size":1941,"mtime":1613936572017,"results":"39","hashOfConfig":"24"},{"size":434,"mtime":1613944410664,"results":"40","hashOfConfig":"24"},{"size":556,"mtime":1626060368523,"results":"41","hashOfConfig":"24"},{"size":576,"mtime":1626060157679,"results":"42","hashOfConfig":"24"},{"size":1903,"mtime":1626064518859,"results":"43","hashOfConfig":"24"},{"size":512,"mtime":1626494201319,"results":"44","hashOfConfig":"24"},{"size":114,"mtime":1626493926538,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"2vs6du",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/index.js",[],["95","96"],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/App.js",["97"],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/footer/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/header/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/card/index.js",["98","99","100"],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/randomtags/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/hot/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/newcomments/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/about/index.js",["101","102","103"],"import React from \"react\";\nimport \"./index.css\";\nimport { Skeleton, Switch, Card, Avatar } from \"antd\";\nimport {\n  EditOutlined,\n  EllipsisOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { List } from \"antd/lib/form/Form\";\nimport CommentList from \"../../components/comment\";\n\nconst { Meta } = Card;\nexport default function About() {\n  const loading = true;\n  return (\n    <div>\n      <div className=\"self-info\">\n        <Card\n          style={{ width: 600, marginTop: 16, borderRadius: \"2rem\" }}\n          actions={[\n            <SettingOutlined key=\"setting\" />,\n            <EditOutlined key=\"edit\" />,\n            <EllipsisOutlined key=\"ellipsis\" />,\n          ]}\n        >\n          <Skeleton avatar paragraph={{ rows: 4 }}>\n            <Meta\n              avatar={\n                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n              }\n              title=\"Card title\"\n              description=\"This is the description\"\n            />\n          </Skeleton>\n        </Card>\n      </div>\n      <div className=\"comments\">\n        <CommentList></CommentList>\n      </div>\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/message/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/map/index.js",["104"],"import React from \"react\";\nimport { List, Typography, Divider, Card } from \"antd\";\nimport \"./index.css\";\n\nconst data = [\n  \"Racing car sprays burning fuel into crowd.\",\n  \"Japanese princess to wed commoner.\",\n  \"Australian walks 100km after outback crash.\",\n  \"Man charged over missing wedding girl.\",\n  \"Los Angeles battles huge wildfires.\",\n];\nconst gridStyle = {\n  width: \"25%\",\n  textAlign: \"center\",\n};\nexport default function SiteMap() {\n  return (\n    <div>\n      <h1 className=\"maptitle\">Liang's Personal Blog SiteMap</h1>\n\n      <div className=\"articlelist\">\n        <Divider orientation=\"left\">New Articles</Divider>\n        <List\n          size=\"large\"\n          dataSource={data}\n          renderItem={(item) => <List.Item>{item}</List.Item>}\n        />\n      </div>\n      <div className=\"articletags\">\n        <Card title=\"Tags\">\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blogs/index.js",["105","106"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Tag, Divider, Spin } from \"antd\";\nimport BlogCard from \"../card\";\nimport \"./index.css\";\nimport {\n  getSentence,\n  getBlogList,\n  getBlogListWithPage,\n} from \"../../api/request\";\nimport {\n  DownCircleTwoTone,\n  SmileTwoTone,\n  setTwoToneColor,\n} from \"@ant-design/icons\";\n\nsetTwoToneColor(\"#06f\");\n\nexport default function Blogs() {\n  const scrollRaf = useRef();\n  //daily content\n  const [dailyContent, setDaliyContent] = useState();\n  const [dailyauthor, setdailyauthor] = useState();\n\n  //bloglist information\n  const [blogList, setblogList] = useState([]);\n\n  //spinning control(daily sentence)\n  const [spin, setspin] = useState(false);\n\n  //spinning control(blog list)\n  const [blogSpin, setblogSpin] = useState(false);\n\n  //page control\n  const [page, setpage] = useState(1);\n\n  //nodata indicator\n  const [noData, setnoData] = useState(false);\n\n  //daily update\n  useEffect(() => {\n    async function updateEachHour() {\n      setspin(true);\n      var result = await getSentence();\n\n      var { forward, words_info } = result.data.data.content_list[0];\n      setspin(false);\n      setDaliyContent(forward);\n      setdailyauthor(words_info);\n    }\n    updateEachHour();\n    var timer = setInterval(updateEachHour, 1000 * 6 * 60); //update each hour\n\n    return clearInterval(timer);\n  }, []);\n\n  //get blog list information\n  useEffect(() => {\n    (async () => {\n      setblogSpin(true);\n      var result = await getBlogListWithPage(page);\n      //var result = await getBlogList();\n      if (result.data.status === 1) {\n        //status==1 success\n        var blogs = result.data.data;\n        if (!blogs) {\n          setnoData(true);\n          setblogSpin(false);\n          return;\n        } //reach to the bottom, no more page\n        setTimeout(() => {\n          console.log(blogs);\n          setblogList([...blogList, ...blogs]);\n          setblogSpin(false);\n        }, 2000);\n      }\n    })();\n  }, [page]);\n\n  return (\n    <div className=\"blog-area\" ref={scrollRaf}>\n      <div className=\"everyday\">\n        <Divider orientation=\"left\">\n          <Tag color=\"#87d068\">Daily Sentence:</Tag>\n        </Divider>\n        <Spin spinning={spin} className=\"forSpinning\" />\n        <p>{dailyContent}</p>\n        <div style={{ marginLeft: 30 }}>\n          &nbsp;&nbsp;{dailyauthor ? `-- ${dailyauthor}` : \"\"}\n        </div>\n      </div>\n      <div className=\"card-list\">\n        {blogList.map((blog, index) => (\n          <BlogCard key={index} blog={blog}></BlogCard>\n        ))}\n\n        <Spin size=\"large\" className=\"loading\" spinning={blogSpin} />\n        {noData ? (\n          <div style={{ textAlign: \"center\" }}>\n            <SmileTwoTone\n              twoToneColor=\"#06f\"\n              style={{ fontSize: \"2.5rem\", margin: \"auto\" }}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      {blogSpin || noData ? (\n        \"\"\n      ) : (\n        <button\n          className=\"nextButton\"\n          onClick={() => {\n            setpage(page + 1);\n            console.log(\"button-page\", page);\n          }}\n        >\n          <DownCircleTwoTone\n            twoToneColor=\"#06f\"\n            style={{ fontSize: \"2.5rem\" }}\n          />\n        </button>\n      )}\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/home/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/notfound/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/comment/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/commentbox/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/inputcomment/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/axios.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/request.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/login/index.js",["107","108"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { getUserInfo } from \"../../api/request\";\nconst { Item } = Form;\nfunction Login(props) {\n  const formRef = useRef();\n  const onFinish = async (values) => {\n    const { username, password } = values;\n    console.log(username, password);\n    var result = await getUserInfo(username, password);\n    console.log(result);\n    if (result.data.status === 1) {\n      message.success(\"login success\");\n      props.history.push(\"/home\");\n    } else {\n      message.warn(\"sorry, you are not verified.\");\n      props.history.push(\"/home\");\n    }\n  };\n  return (\n    <div className=\"loginForm\">\n      <Form\n        ref={formRef}\n        labelCol={{ span: 6, offset: 1 }}\n        wrapperCol={{ span: 10 }}\n        onFinish={onFinish}\n      >\n        <Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined />}\n            placeholder=\"Username\"\n            autoComplete=\"false\"\n          />\n        </Item>\n        <Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<LockOutlined />}\n            placeholder=\"Password\"\n            autoComplete=\"false\"\n          />\n        </Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"loginButton\">\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n}\nexport default withRouter(Login);\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blog/index.js",["109","110","111","112"],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/postinfo/index.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":14},{"ruleId":"117","severity":1,"message":"122","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":22},{"ruleId":"117","severity":1,"message":"123","line":1,"column":24,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"124","line":3,"column":20,"nodeType":"119","messageId":"120","endLine":3,"endColumn":26},{"ruleId":"117","severity":1,"message":"125","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":14},{"ruleId":"117","severity":1,"message":"126","line":14,"column":9,"nodeType":"119","messageId":"120","endLine":14,"endColumn":16},{"ruleId":"117","severity":1,"message":"127","line":2,"column":16,"nodeType":"119","messageId":"120","endLine":2,"endColumn":26},{"ruleId":"117","severity":1,"message":"128","line":7,"column":3,"nodeType":"119","messageId":"120","endLine":7,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":77,"column":6,"nodeType":"131","endLine":77,"endColumn":12,"suggestions":"132"},{"ruleId":"117","severity":1,"message":"133","line":1,"column":25,"nodeType":"119","messageId":"120","endLine":1,"endColumn":33},{"ruleId":"117","severity":1,"message":"134","line":1,"column":35,"nodeType":"119","messageId":"120","endLine":1,"endColumn":44},{"ruleId":"117","severity":1,"message":"135","line":5,"column":18,"nodeType":"119","messageId":"120","endLine":5,"endColumn":23},{"ruleId":"117","severity":1,"message":"136","line":5,"column":34,"nodeType":"119","messageId":"120","endLine":5,"endColumn":43},{"ruleId":"117","severity":1,"message":"137","line":5,"column":45,"nodeType":"119","messageId":"120","endLine":5,"endColumn":49},{"ruleId":"117","severity":1,"message":"138","line":5,"column":51,"nodeType":"119","messageId":"120","endLine":5,"endColumn":53},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Avatar' is defined but never used.","'h2' is defined but never used.","'Switch' is defined but never used.","'List' is defined but never used.","'loading' is assigned a value but never used.","'Typography' is defined but never used.","'getBlogList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'blogList'. Either include it or remove the dependency array. You can also do a functional update 'setblogList(b => ...)' if you only need 'blogList' in the 'setblogList' call.","ArrayExpression",["141"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'views' is assigned a value but never used.","'createdAt' is assigned a value but never used.","'tags' is assigned a value but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [blogList, page]",{"range":"144","text":"145"},[1979,1985],"[blogList, page]"]