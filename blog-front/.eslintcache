[{"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/index.js":"1","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/App.js":"2","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/newblog/index.js":"3","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/blog/index.js":"4","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/components/home/index.js":"5","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/map/index.js":"6","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/api/request.js":"7","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/utli/storage.js":"8","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/components/comment/index.js":"9","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/upload/index.js":"10","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/postinfo/index.js":"11","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/hot/index.js":"12","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/blogs/index.js":"13","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/notfound/index.js":"14","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/randomtags/index.js":"15","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/context/index.js":"16","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/api/axios.js":"17","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/login/index.js":"18","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/card/index.js":"19","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/utli/addclick.js":"20","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/utli/timecovert.js":"21","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/components/head/index.js":"22","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/components/foot/index.js":"23"},{"size":240,"mtime":1629953724521,"results":"24","hashOfConfig":"25"},{"size":1683,"mtime":1635669355621,"results":"26","hashOfConfig":"25"},{"size":3012,"mtime":1634372973881,"results":"27","hashOfConfig":"25"},{"size":1184,"mtime":1636270699846,"results":"28","hashOfConfig":"25"},{"size":1429,"mtime":1635669579454,"results":"29","hashOfConfig":"25"},{"size":166,"mtime":1633912516420,"results":"30","hashOfConfig":"25"},{"size":1209,"mtime":1636182959515,"results":"31","hashOfConfig":"25"},{"size":263,"mtime":1629953724526,"results":"32","hashOfConfig":"25"},{"size":434,"mtime":1629953724520,"results":"33","hashOfConfig":"25"},{"size":1932,"mtime":1629953724526,"results":"34","hashOfConfig":"25"},{"size":390,"mtime":1629953724525,"results":"35","hashOfConfig":"25"},{"size":1156,"mtime":1635664323438,"results":"36","hashOfConfig":"25"},{"size":2769,"mtime":1635672706427,"results":"37","hashOfConfig":"25"},{"size":102,"mtime":1629953724525,"results":"38","hashOfConfig":"25"},{"size":1413,"mtime":1635670499984,"results":"39","hashOfConfig":"25"},{"size":70,"mtime":1629953724523,"results":"40","hashOfConfig":"25"},{"size":558,"mtime":1634443818756,"results":"41","hashOfConfig":"25"},{"size":1992,"mtime":1633912516419,"results":"42","hashOfConfig":"25"},{"size":3111,"mtime":1635579837832,"results":"43","hashOfConfig":"25"},{"size":182,"mtime":1629953724526,"results":"44","hashOfConfig":"25"},{"size":237,"mtime":1635580342832,"results":"45","hashOfConfig":"25"},{"size":892,"mtime":1635672369628,"results":"46","hashOfConfig":"25"},{"size":463,"mtime":1635665000382,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1j4vwa2",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/index.js",[],["102","103"],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/App.js",["104"],"import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\n\nimport Home from \"./components/home\";\nimport Map from \"./pages/map\";\nimport Blog from \"./pages/blog\";\nimport NewBlog from \"./pages/newblog\";\nimport Head from \"./components/head\";\nimport Foot from \"./components/foot\";\nimport { Layout } from \"antd\";\nimport { ctx } from \"./pages/context\";\n\nimport \"antd/dist/antd.css\";\nimport \"./app.css\";\n\nconst { Header, Content, Footer } = Layout;\n\nconst App = (props) => {\n  const [tag, settag] = useState(\"all\");\n  const [keyword, setkeyword] = useState(\"\");\n\n  //handle tag changing\n  const handleTag = (tag) => {\n    settag(tag);\n  };\n  //handle tag `all`\n  const handleAllTag = () => {\n    props.history.push(\"/\");\n    settag(\"all\");\n  };\n  //handle keyword\n  const handleKeyword = (keyword) => {\n    setkeyword(keyword);\n  };\n\n  return (\n    <div className=\"app\">\n      <ctx.Provider\n        value={{\n          tag,\n          keyword,\n          handleAllTag,\n          handleTag,\n          handleKeyword,\n        }}\n      >\n        <Layout>\n          <Header>\n            <Head />\n          </Header>\n          <Content className=\"body\">\n            <Switch>\n              <Route path=\"/map\" component={Map} />\n              <Route path=\"/home/\" component={Home} />\n              <Route path=\"/blog/:id\" component={Blog} />\n              <Route path=\"/newblog\" component={NewBlog} />\n              <Redirect to=\"/home/\" />\n            </Switch>\n          </Content>\n          <Footer>\n            <Foot />\n          </Footer>\n        </Layout>\n      </ctx.Provider>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/newblog/index.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/blog/index.js",["105"],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/components/home/index.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/map/index.js",["106","107","108","109"],"import React from \"react\";\nimport { List, Typography, Divider, Card } from \"antd\";\nimport \"./index.css\";\n\nexport default function SiteMap() {\n  return <div></div>;\n}\n","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/api/request.js",["110"],"import { ajax } from \"./axios\";\nimport axios from \"axios\";\nconst dailySentenceApi = \"http://v3.wufazhuce.com:8000/api/channel/one/0/0\";\nconst baseUrl = \"\";\n\n//get daily sentence\nexport function getSentence() {\n  return axios.get(dailySentenceApi);\n}\n/*------------------handle blog------------------ */\n\n//get the bloglist\nexport function getBlogList() {\n  return ajax(\"/blog/list\");\n}\n\n// get the bloglist by keyword,tags,page\nexport function getBlogListsByparameters(keyword = \"\", tag = \"all\", page = 1) {\n  return ajax(`/blog/list/parameter`, { keyword, tag, page }, \"post\");\n}\n\n//create a new blog\nexport function createNewBlog(title, content, tags, img) {\n  return ajax(\"/blog/new\", { title, content, tags, img }, \"post\");\n}\n\n//hanle likes\nexport function addLikes(id, likes) {\n  return ajax(\"/blog/likes/add\", { id, likes }, \"post\");\n}\n//get tags\nexport function getTags() {\n  return ajax(\"/blog/taglist\");\n}\n\n//add one view on one blog\nexport function addOneView(id) {\n  return ajax(\"/blog/addview\", { id }, \"post\");\n}\n\n/*--------------vertify username and password----------------------- */\n\nexport function getUserInfo(username, password) {\n  return ajax(\"/login\", { username, password }, \"post\");\n}\n","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/utli/storage.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/components/comment/index.js",[],["111","112"],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/upload/index.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/postinfo/index.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/hot/index.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/blogs/index.js",["113"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n  useContext,\n} from \"react\";\nimport { Tag, Divider, Spin, Pagination } from \"antd\";\nimport BlogCard from \"../card\";\nimport { getSentence } from \"../../api/request\";\nimport { ctx } from \"../context\";\nimport { getBlogListsByparameters } from \"../../api/request\";\nimport \"./index.css\";\n\nexport default function Blogs(props) {\n  const scrollRaf = useRef();\n  const { tag, keyword } = useContext(ctx);\n\n  //spinning control(daily sentence)\n  const [spin, setspin] = useState(false);\n  const [dailyContent, setDaliyContent] = useState();\n  const [dailyauthor, setdailyauthor] = useState();\n\n  const [blogList, setblogList] = useState([]);\n  const [blogSpin, setblogSpin] = useState(false);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const defaultPageSize = 4;\n  const [total, setTotal] = useState(0);\n\n  const handlePageChange = (page) => {\n    console.log(\"page\", page);\n    setCurrentPage(page);\n  };\n\n  //daily update\n  useEffect(() => {\n    async function updateEachHour() {\n      setspin(true);\n      var result = await getSentence();\n      var { forward, words_info } = result.data.data.content_list[0];\n      setspin(false);\n      setDaliyContent(forward);\n      setdailyauthor(words_info);\n    }\n    updateEachHour();\n  }, []);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [tag]);\n  // get blogs by keyword,tag,page\n  useEffect(() => {\n    (async () => {\n      setblogSpin(true);\n      const blogs = await getBlogListsByparameters(keyword, tag, currentPage);\n      const {\n        data: { data, total },\n      } = blogs;\n      console.log(\"totoalPage\", total);\n      if (data) {\n        setblogList(data);\n        setTotal(total);\n        setblogSpin(false);\n      } else {\n        setblogList([]);\n        setblogSpin(false);\n      }\n    })();\n  }, [keyword, tag, currentPage]);\n\n  return (\n    <div className=\"blog-area\" ref={scrollRaf}>\n      <div className=\"everyday\">\n        <Divider orientation=\"left\">\n          <Tag color=\"#06f\">Daily Sentence:</Tag>\n        </Divider>\n        <Spin spinning={spin} className=\"forSpinning\" />\n        <p>{dailyContent}</p>\n        <div style={{ marginLeft: 30 }}>\n          &nbsp;&nbsp;{dailyauthor ? `-- ${dailyauthor}` : \"\"}\n        </div>\n      </div>\n      <div className=\"card-list\">\n        {blogList.map((blog, index) => {\n          return <BlogCard key={index} blog={blog}></BlogCard>;\n        })}\n        <Spin size=\"large\" className=\"loading\" spinning={blogSpin} />\n      </div>\n      <Pagination\n        defaultPageSize={defaultPageSize}\n        defaultCurrent={1}\n        current={currentPage}\n        total={total}\n        onChange={handlePageChange}\n      />\n    </div>\n  );\n}\n","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/notfound/index.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/randomtags/index.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/context/index.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/api/axios.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/login/index.js",["114","115"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { getUserInfo } from \"../../api/request\";\nimport { setUser } from \"../../utli/storage\";\nconst { Item } = Form;\nfunction Login(props) {\n  const formRef = useRef();\n  const onFinish = async (values) => {\n    const { username, password } = values;\n\n    var result = await getUserInfo(username, password);\n\n    if (result.data.status === 1) {\n      console.log(\"data\", result.data.data);\n      setUser(\"token\", result.data.data);\n      message.success(\"login success\");\n\n      props.history.push(\"/home\");\n    } else {\n      message.warn(\"sorry, you are not verified.Please try again\");\n    }\n  };\n  return (\n    <div className=\"formContainer\">\n      <Form\n        ref={formRef}\n        labelCol={{ span: 6, offset: 1 }}\n        wrapperCol={{ span: 10 }}\n        onFinish={onFinish}\n        className=\"loginForm\"\n      >\n        <Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined />}\n            placeholder=\"Username\"\n            autoComplete=\"false\"\n          />\n        </Item>\n        <Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<LockOutlined />}\n            placeholder=\"Password\"\n            autoComplete=\"false\"\n          />\n        </Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"loginButton\">\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n}\nexport default withRouter(Login);\n","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/pages/card/index.js",["116","117"],"import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Tag } from \"antd\";\nimport { HeartTwoTone, CommentOutlined } from \"@ant-design/icons\";\nimport timeCovert from \"../../utli/timecovert\";\nimport { addLikes } from \"../../api/request\";\nimport addclick from \"../../utli/addclick\";\nimport \"./index.css\";\n\nexport default function BlogCard(props) {\n  var { id, title, views, content, createdAt, tags, img, likes } = props.blog;\n  var newHtml = onlyShowText(content);\n\n  const [blogLiks, setblogLikes] = useState();\n  const [clicked, setclicked] = useState(false);\n  var date = timeCovert(createdAt);\n\n  var wrapup = (\n    <div className=\"card-content\">\n      <div className=\"card-img\">\n        <img src={img} alt=\"\" />\n      </div>\n      <div className=\"card-text\">\n        <div\n          className=\"card-text-para\"\n          dangerouslySetInnerHTML={{ __html: newHtml }}\n        ></div>\n        <NavLink\n          to={{\n            pathname: `/blog/${id}`,\n            state: props.blog,\n          }}\n        >\n          <div\n            className=\"card-text-button\"\n            onClick={() => {\n              addclick(id);\n            }}\n          >\n            Read More\n          </div>\n        </NavLink>\n      </div>\n    </div>\n  );\n\n  //hanle likes\n  useEffect(() => {\n    setblogLikes(likes);\n  }, [likes]);\n\n  const handleLikes = async (id, likes) => {\n    const result = await addLikes(id, likes);\n    if (result) {\n      console.log(\"add success\");\n    }\n  };\n  return (\n    <div className=\"blog-card\">\n      <NavLink\n        to={{\n          pathname: `/blog/${id}`,\n          state: props.blog,\n        }}\n      >\n        <div\n          className=\"card-title\"\n          onClick={() => {\n            addclick(id);\n          }}\n        >\n          {title}\n        </div>\n      </NavLink>\n      {wrapup}\n      <div className=\"card-action\">\n        {!clicked ? (\n          <button\n            className=\"thumb\"\n            onClick={() => {\n              handleLikes(id, likes + 1);\n              setblogLikes(blogLiks + 1);\n              setclicked(true);\n            }}\n          >\n            <HeartTwoTone twoToneColor=\"#1890ff\" />\n            <span style={{ marginLeft: \"0.5rem\" }}>{blogLiks}</span>\n          </button>\n        ) : (\n          <button\n            className=\"thumb\"\n            onClick={() => {\n              handleLikes(id, likes);\n              setblogLikes(blogLiks - 1);\n              setclicked(false);\n            }}\n          >\n            <HeartTwoTone twoToneColor=\"#eb2f96\" />\n            <span style={{ marginLeft: \"0.5rem\" }}>{blogLiks}</span>\n          </button>\n        )}\n        <span>{date}</span>\n        <span>\n          <Tag color=\"#bae7ff\"> {tags}</Tag>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nfunction onlyShowText(html) {\n  var blackList = [\"img\", \"video\", \"table\", \"code\"];\n\n  var blockString1 = blackList.map((item) => `(<${item})`).join(\"|\");\n\n  var reg = new RegExp(blockString1, \"g\");\n\n  var newHtml = html.replace(reg, (a, b, c) => {\n    return a + ` style=\"display:none\" `;\n  });\n  return newHtml;\n}\n","/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/utli/addclick.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/utli/timecovert.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/components/head/index.js",[],"/Users/guoliang/Desktop/project/project-react-newblog/blog-front/src/components/foot/index.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"126","line":10,"column":51,"nodeType":"124","messageId":"125","endLine":10,"endColumn":53},{"ruleId":"122","severity":1,"message":"127","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"128","line":2,"column":16,"nodeType":"124","messageId":"125","endLine":2,"endColumn":26},{"ruleId":"122","severity":1,"message":"129","line":2,"column":28,"nodeType":"124","messageId":"125","endLine":2,"endColumn":35},{"ruleId":"122","severity":1,"message":"130","line":2,"column":37,"nodeType":"124","messageId":"125","endLine":2,"endColumn":41},{"ruleId":"122","severity":1,"message":"131","line":4,"column":7,"nodeType":"124","messageId":"125","endLine":4,"endColumn":14},{"ruleId":"118","replacedBy":"132"},{"ruleId":"120","replacedBy":"133"},{"ruleId":"122","severity":1,"message":"134","line":6,"column":3,"nodeType":"124","messageId":"125","endLine":6,"endColumn":14},{"ruleId":"122","severity":1,"message":"135","line":1,"column":25,"nodeType":"124","messageId":"125","endLine":1,"endColumn":33},{"ruleId":"122","severity":1,"message":"123","line":1,"column":35,"nodeType":"124","messageId":"125","endLine":1,"endColumn":44},{"ruleId":"122","severity":1,"message":"136","line":4,"column":24,"nodeType":"124","messageId":"125","endLine":4,"endColumn":39},{"ruleId":"122","severity":1,"message":"137","line":11,"column":20,"nodeType":"124","messageId":"125","endLine":11,"endColumn":25},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'Card' is defined but never used.","'baseUrl' is assigned a value but never used.",["138"],["139"],"'useCallback' is defined but never used.","'useState' is defined but never used.","'CommentOutlined' is defined but never used.","'views' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]