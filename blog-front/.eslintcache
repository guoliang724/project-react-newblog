[{"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/index.js":"1","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/App.js":"2","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/footer/index.js":"3","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/header/index.js":"4","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/card/index.js":"5","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/randomtags/index.js":"6","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/hot/index.js":"7","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/newcomments/index.js":"8","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/about/index.js":"9","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/message/index.js":"10","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/map/index.js":"11","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blogs/index.js":"12","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/home/index.js":"13","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/notfound/index.js":"14","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/comment/index.js":"15","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/inputcomment/index.js":"16","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/axios.js":"17","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/request.js":"18","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/login/index.js":"19","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blog/index.js":"20","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/postinfo/index.js":"21","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/upload/index.js":"22","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/newblog/index.js":"23","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/timecovert.js":"24","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/useComment.js":"25","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/commentList.js":"26","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/forAction.js":"27","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/useForChildren.js":"28"},{"size":240,"mtime":1613693085000,"results":"29","hashOfConfig":"30"},{"size":716,"mtime":1626754104519,"results":"31","hashOfConfig":"30"},{"size":372,"mtime":1613600611019,"results":"32","hashOfConfig":"30"},{"size":1335,"mtime":1626836292743,"results":"33","hashOfConfig":"30"},{"size":2769,"mtime":1627190388468,"results":"34","hashOfConfig":"30"},{"size":557,"mtime":1626837592725,"results":"35","hashOfConfig":"30"},{"size":468,"mtime":1626838244771,"results":"36","hashOfConfig":"30"},{"size":1829,"mtime":1613710472004,"results":"37","hashOfConfig":"30"},{"size":1151,"mtime":1613768114045,"results":"38","hashOfConfig":"30"},{"size":236,"mtime":1613771122094,"results":"39","hashOfConfig":"30"},{"size":1303,"mtime":1613709916435,"results":"40","hashOfConfig":"30"},{"size":3160,"mtime":1626836397098,"results":"41","hashOfConfig":"30"},{"size":1430,"mtime":1626837991334,"results":"42","hashOfConfig":"30"},{"size":102,"mtime":1613713948699,"results":"43","hashOfConfig":"30"},{"size":328,"mtime":1613770111801,"results":"44","hashOfConfig":"30"},{"size":1980,"mtime":1627187384704,"results":"45","hashOfConfig":"30"},{"size":556,"mtime":1626060368523,"results":"46","hashOfConfig":"30"},{"size":1299,"mtime":1627187389674,"results":"47","hashOfConfig":"30"},{"size":1844,"mtime":1626824202832,"results":"48","hashOfConfig":"30"},{"size":690,"mtime":1626838757733,"results":"49","hashOfConfig":"30"},{"size":114,"mtime":1626493926538,"results":"50","hashOfConfig":"30"},{"size":1932,"mtime":1626821564285,"results":"51","hashOfConfig":"30"},{"size":2265,"mtime":1626926093465,"results":"52","hashOfConfig":"30"},{"size":134,"mtime":1626840494926,"results":"53","hashOfConfig":"30"},{"size":416,"mtime":1627190711733,"results":"54","hashOfConfig":"30"},{"size":1563,"mtime":1627189904753,"results":"55","hashOfConfig":"30"},{"size":715,"mtime":1627186828047,"results":"56","hashOfConfig":"30"},{"size":1150,"mtime":1627188561968,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"2vs6du",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/index.js",[],["123","124"],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/App.js",["125"],"import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport Map from \"./pages/map\";\nimport Blog from \"./pages/blog\";\nimport NewBlog from \"./pages/newblog\";\nexport default function App() {\n  return (\n    <div className=\"clear-fix\">\n      <Header />\n      <Switch>\n        <Route path=\"/map\" component={Map} />\n        <Route path=\"/home/\" component={Home} />\n        <Route path=\"/blog/:id\" component={Blog} />\n        <Route path=\"/newblog\" component={NewBlog} />\n        <Redirect to=\"/home/\" />\n      </Switch>\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/footer/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/header/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/card/index.js",["126"],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/randomtags/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/hot/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/newcomments/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/about/index.js",["127","128","129"],"import React from \"react\";\nimport \"./index.css\";\nimport { Skeleton, Switch, Card, Avatar } from \"antd\";\nimport {\n  EditOutlined,\n  EllipsisOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport { List } from \"antd/lib/form/Form\";\nimport CommentList from \"../../components/comment\";\n\nconst { Meta } = Card;\nexport default function About() {\n  const loading = true;\n  return (\n    <div>\n      <div className=\"self-info\">\n        <Card\n          style={{ width: 600, marginTop: 16, borderRadius: \"2rem\" }}\n          actions={[\n            <SettingOutlined key=\"setting\" />,\n            <EditOutlined key=\"edit\" />,\n            <EllipsisOutlined key=\"ellipsis\" />,\n          ]}\n        >\n          <Skeleton avatar paragraph={{ rows: 4 }}>\n            <Meta\n              avatar={\n                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n              }\n              title=\"Card title\"\n              description=\"This is the description\"\n            />\n          </Skeleton>\n        </Card>\n      </div>\n      <div className=\"comments\">\n        <CommentList></CommentList>\n      </div>\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/message/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/map/index.js",["130"],"import React from \"react\";\nimport { List, Typography, Divider, Card } from \"antd\";\nimport \"./index.css\";\n\nconst data = [\n  \"Racing car sprays burning fuel into crowd.\",\n  \"Japanese princess to wed commoner.\",\n  \"Australian walks 100km after outback crash.\",\n  \"Man charged over missing wedding girl.\",\n  \"Los Angeles battles huge wildfires.\",\n];\nconst gridStyle = {\n  width: \"25%\",\n  textAlign: \"center\",\n};\nexport default function SiteMap() {\n  return (\n    <div>\n      <h1 className=\"maptitle\">Liang's Personal Blog SiteMap</h1>\n\n      <div className=\"articlelist\">\n        <Divider orientation=\"left\">New Articles</Divider>\n        <List\n          size=\"large\"\n          dataSource={data}\n          renderItem={(item) => <List.Item>{item}</List.Item>}\n        />\n      </div>\n      <div className=\"articletags\">\n        <Card title=\"Tags\">\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n          <Card.Grid style={gridStyle}>Content</Card.Grid>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blogs/index.js",["131","132"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Tag, Divider, Spin } from \"antd\";\nimport BlogCard from \"../card\";\nimport \"./index.css\";\nimport {\n  getSentence,\n  getBlogList,\n  getBlogListWithPage,\n} from \"../../api/request\";\nimport {\n  DownCircleTwoTone,\n  SmileTwoTone,\n  setTwoToneColor,\n} from \"@ant-design/icons\";\n\nsetTwoToneColor(\"#06f\");\n\nexport default function Blogs() {\n  const scrollRaf = useRef();\n  //daily content\n  const [dailyContent, setDaliyContent] = useState();\n  const [dailyauthor, setdailyauthor] = useState();\n\n  //bloglist information\n  const [blogList, setblogList] = useState([]);\n\n  //spinning control(daily sentence)\n  const [spin, setspin] = useState(false);\n\n  //spinning control(blog list)\n  const [blogSpin, setblogSpin] = useState(false);\n\n  //page control\n  const [page, setpage] = useState(1);\n\n  //nodata indicator\n  const [noData, setnoData] = useState(false);\n\n  //daily update\n  useEffect(() => {\n    async function updateEachHour() {\n      setspin(true);\n      var result = await getSentence();\n\n      var { forward, words_info } = result.data.data.content_list[0];\n      setspin(false);\n      setDaliyContent(forward);\n      setdailyauthor(words_info);\n    }\n    updateEachHour();\n    var timer = setInterval(updateEachHour, 1000 * 6 * 60); //update each hour\n\n    return clearInterval(timer);\n  }, []);\n\n  //get blog list information\n  useEffect(() => {\n    (async () => {\n      setblogSpin(true);\n      var result = await getBlogListWithPage(page);\n      //var result = await getBlogList();\n      if (result.data.status === 1) {\n        //status==1 success\n        var blogs = result.data.data;\n        if (!blogs) {\n          setnoData(true);\n          setblogSpin(false);\n          return;\n        } //reach to the bottom, no more page\n\n        setblogList([...blogList, ...blogs]);\n        setblogSpin(false);\n      }\n    })();\n  }, [page]);\n\n  return (\n    <div className=\"blog-area\" ref={scrollRaf}>\n      <div className=\"everyday\">\n        <Divider orientation=\"left\">\n          <Tag color=\"#06f\">Daily Sentence:</Tag>\n        </Divider>\n        <Spin spinning={spin} className=\"forSpinning\" />\n        <p>{dailyContent}</p>\n        <div style={{ marginLeft: 30 }}>\n          &nbsp;&nbsp;{dailyauthor ? `-- ${dailyauthor}` : \"\"}\n        </div>\n      </div>\n      <div className=\"card-list\">\n        {blogList.map((blog, index) => (\n          <BlogCard key={index} blog={blog}></BlogCard>\n        ))}\n\n        <Spin size=\"large\" className=\"loading\" spinning={blogSpin} />\n        {noData ? (\n          <div style={{ textAlign: \"center\" }}>\n            <SmileTwoTone\n              twoToneColor=\"#06f\"\n              style={{ fontSize: \"2.5rem\", margin: \"auto\" }}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      {blogSpin || noData ? (\n        \"\"\n      ) : (\n        <button\n          className=\"nextButton\"\n          onClick={() => {\n            setpage(page + 1);\n          }}\n        >\n          <DownCircleTwoTone\n            twoToneColor=\"#06f\"\n            style={{ fontSize: \"2.5rem\" }}\n          />\n        </button>\n      )}\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/home/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/notfound/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/components/comment/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/inputcomment/index.js",["133","134","135","136","137","138"],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/axios.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/api/request.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/login/index.js",["139","140"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { getUserInfo } from \"../../api/request\";\n\nconst { Item } = Form;\nfunction Login(props) {\n  const formRef = useRef();\n  const onFinish = async (values) => {\n    const { username, password } = values;\n\n    var result = await getUserInfo(username, password);\n\n    if (result.data.status === 1) {\n      message.success(\"login success\");\n      props.history.push(\"/home\");\n    } else {\n      message.warn(\"sorry, you are not verified.\");\n      props.history.push(\"/home\");\n    }\n  };\n  return (\n    <div className=\"loginForm\">\n      <Form\n        ref={formRef}\n        labelCol={{ span: 6, offset: 1 }}\n        wrapperCol={{ span: 10 }}\n        onFinish={onFinish}\n      >\n        <Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined />}\n            placeholder=\"Username\"\n            autoComplete=\"false\"\n          />\n        </Item>\n        <Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<LockOutlined />}\n            placeholder=\"Password\"\n            autoComplete=\"false\"\n          />\n        </Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"loginButton\">\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n}\nexport default withRouter(Login);\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/blog/index.js",["141","142","143"],"import React from \"react\";\nimport PostInfo from \"../postinfo\";\nimport \"./index.css\";\nimport moment from \"moment\";\nexport default function Blog(props) {\n  const { title, views, content, createdAt, tags, id } =\n    props.history.location.state;\n  var date = moment(createdAt).utc();\n  console.log(\"content\", date);\n  return (\n    <div className=\"blog\">\n      <div className=\"blog-header\">\n        <h1>{title}</h1>\n        <div className=\"postInfo\">\n          <PostInfo />\n        </div>\n      </div>\n      <div\n        className=\"blog-content\"\n        dangerouslySetInnerHTML={{\n          __html: content,\n        }}\n      ></div>\n      <div className=\"blog-related\"></div>\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/postinfo/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/upload/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/pages/newblog/index.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/timecovert.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/useComment.js",[],"/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/commentList.js",["144"],"import { useState } from \"react\";\nimport useComment from \"./useComment\";\nimport { List, Comment, Tooltip } from \"antd\";\nimport moment from \"moment\";\n\nimport ForAction from \"./forAction\";\nimport ForChildren from \"./useForChildren\";\n\nexport default function ToCommentList(article_id) {\n  var comments = useComment(article_id);\n  console.log(\"comments\", comments);\n  var data = comments.map((item, index) => {\n    var time = moment(item.createdAt);\n\n    return {\n      action: [\n        <ForAction\n          comment_id={item.id}\n          article_id={article_id}\n          toAuthor={item.author}\n        />,\n      ],\n      author: item.author,\n      avatar: item.avatar,\n      content: <p>{item.content}</p>,\n      datetime: (\n        <Tooltip title={time.format(\"YYYY-MM-DD HH:mm:ss\")}>\n          <span>{moment().subtract(time, \"days\").fromNow()}</span>\n        </Tooltip>\n      ),\n      children: item.children,\n    };\n  });\n  return (\n    <List\n      className=\"comment-list\"\n      header={`${data.length} replies`}\n      itemLayout=\"horizontal\"\n      dataSource={data}\n      renderItem={(item) => (\n        <li>\n          <Comment\n            actions={item.action}\n            author={item.author}\n            avatar={item.avatar}\n            content={item.content}\n            datetime={item.datetime}\n          >\n            {\n              <ForChildren\n                children={item.children}\n                toAuthor={item.author}\n                comment_id={item.id}\n              />\n            }\n          </Comment>\n        </li>\n      )}\n    />\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/forAction.js",["145","146"],"import React, { useState } from \"react\";\nimport InputComment from \"../pages/inputcomment\";\nexport default function ForAction(props) {\n  const [showReply, setShowReply] = useState(false);\n\n  const [spin, setspin] = useState(false);\n  const handleFold = (value) => {\n    setShowReply(value);\n  };\n  return (\n    <div>\n      <span\n        onClick={() => {\n          setShowReply(!showReply);\n        }}\n      >\n        {showReply ? \"Fold\" : \"Reply\"}\n      </span>\n      {showReply ? (\n        <InputComment\n          comment_id={props.comment_id}\n          article_id={props.article_id}\n          toAuthor={props.toAuthor}\n          handleFold={handleFold}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","/Users/zhangguoliang/Desktop/react project/new blog/blog-front/src/utli/useForChildren.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":14},{"ruleId":"151","severity":1,"message":"155","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"156","line":3,"column":20,"nodeType":"153","messageId":"154","endLine":3,"endColumn":26},{"ruleId":"151","severity":1,"message":"157","line":9,"column":10,"nodeType":"153","messageId":"154","endLine":9,"endColumn":14},{"ruleId":"151","severity":1,"message":"158","line":14,"column":9,"nodeType":"153","messageId":"154","endLine":14,"endColumn":16},{"ruleId":"151","severity":1,"message":"159","line":2,"column":16,"nodeType":"153","messageId":"154","endLine":2,"endColumn":26},{"ruleId":"151","severity":1,"message":"160","line":7,"column":3,"nodeType":"153","messageId":"154","endLine":7,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":75,"column":6,"nodeType":"163","endLine":75,"endColumn":12,"suggestions":"164"},{"ruleId":"151","severity":1,"message":"155","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"165","line":1,"column":38,"nodeType":"153","messageId":"154","endLine":1,"endColumn":44},{"ruleId":"151","severity":1,"message":"166","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"167","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":17},{"ruleId":"151","severity":1,"message":"168","line":4,"column":19,"nodeType":"153","messageId":"154","endLine":4,"endColumn":25},{"ruleId":"151","severity":1,"message":"157","line":4,"column":41,"nodeType":"153","messageId":"154","endLine":4,"endColumn":45},{"ruleId":"151","severity":1,"message":"169","line":1,"column":25,"nodeType":"153","messageId":"154","endLine":1,"endColumn":33},{"ruleId":"151","severity":1,"message":"155","line":1,"column":35,"nodeType":"153","messageId":"154","endLine":1,"endColumn":44},{"ruleId":"151","severity":1,"message":"170","line":6,"column":18,"nodeType":"153","messageId":"154","endLine":6,"endColumn":23},{"ruleId":"151","severity":1,"message":"171","line":6,"column":45,"nodeType":"153","messageId":"154","endLine":6,"endColumn":49},{"ruleId":"151","severity":1,"message":"172","line":6,"column":51,"nodeType":"153","messageId":"154","endLine":6,"endColumn":53},{"ruleId":"151","severity":1,"message":"169","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":18},{"ruleId":"151","severity":1,"message":"173","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":14},{"ruleId":"151","severity":1,"message":"174","line":6,"column":16,"nodeType":"153","messageId":"154","endLine":6,"endColumn":23},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Switch' is defined but never used.","'List' is defined but never used.","'loading' is assigned a value but never used.","'Typography' is defined but never used.","'getBlogList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'blogList'. Either include it or remove the dependency array. You can also do a functional update 'setblogList(b => ...)' if you only need 'blogList' in the 'setblogList' call.","ArrayExpression",["177"],"'useRef' is defined but never used.","'moment' is defined but never used.","'Comment' is defined but never used.","'Avatar' is defined but never used.","'useState' is defined but never used.","'views' is assigned a value but never used.","'tags' is assigned a value but never used.","'id' is assigned a value but never used.","'spin' is assigned a value but never used.","'setspin' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},"Update the dependencies array to be: [blogList, page]",{"range":"180","text":"181"},[1901,1907],"[blogList, page]"]